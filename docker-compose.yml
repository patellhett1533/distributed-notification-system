version: "3"
services:
  app:
    container_name: notification_system_api
    build: .
    env_file:
      - ./.env
    ports:
      - ${NODE_LOCAL_PORT}:${NODE_DOCKER_PORT}
    depends_on:
      - mongodb
      - kafka
      - elasticsearch
    environment:
      - MONGODB_URI=mongodb://mongodb:${MONGODB_DOCKER_PORT}/notification_system
      - KAFKA_BROKERS=kafka:${KAFKA_DOCKER_PORT}
      - ELASTICSEARCH_NODE=http://elasticsearch:${ELASTIC_DOCKER_PORT}
    restart: on-failure
    command: sh -c "npm run start"

  mongodb:
    container_name: notification_system_mongodb
    image: mongo:4.2.1-bionic
    restart: always
    env_file:
      - ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    ports:
      - ${MONGODB_LOCAL_PORT}:${MONGODB_DOCKER_PORT}
    volumes:
      - mongodb_data:/data/db
    networks:
      - notification-network

  kafka:
    container_name: notification_system_kafka
    image: wurstmeister/kafka:latest
    env_file:
      - ./.env
    ports:
      - ${KAFKA_LOCAL_PORT}:${KAFKA_DOCKER_PORT}
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_DOCKER_PORT}
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - notification-network

  zookeeper:
    container_name: notification_system_zookeeper
    image: wurstmeister/zookeeper:latest
    env_file:
      - ./.env
    ports:
      - ${ZOOKEEPER_LOCAL_PORT}:${ZOOKEEPER_DOCKER_PORT}
    volumes:
      - zookeeper_data:/data
    networks:
      - notification-network

  elasticsearch:
    container_name: notification_system_elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    env_file:
      - ./.env
    ports:
      - ${ELASTIC_LOCAL_PORT}:${ELASTIC_DOCKER_PORT}
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - notification-network

volumes:
  mongodb_data:
    driver: local

  kafka_data:
    driver: local

  zookeeper_data:
    driver: local

  elasticsearch_data:
    driver: local

networks:
  notification-network:
    driver: bridge
